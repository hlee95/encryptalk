C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2
                    -) PR(.\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  3.3 CP2
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2015 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          
  25          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  26          
  27          
  28          #if defined(__C51__) || defined(__CX51__)
  29                  #define CYPACKED
  30                  #define CYPACKED_ATTR
  31                  #define CYALIGNED
  32                  
  33              #define CY_CFG_UNUSED
  34                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  35          
  36          
  37          
  38                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  39                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  40                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  41          #else
                      #error Unsupported toolchain
              #endif
  44          
  45          
  46          
  47          /* Clock startup error codes                                                   */
  48          #define CYCLOCKSTART_NO_ERROR    0u
  49          #define CYCLOCKSTART_XTAL_ERROR  1u
  50          #define CYCLOCKSTART_32KHZ_ERROR 2u
  51          #define CYCLOCKSTART_PLL_ERROR   3u
  52          
  53          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 2   

  54          /*******************************************************************************
  55          * Function Name: CyClockStartupError
  56          ********************************************************************************
  57          * Summary:
  58          *  If an error is encountered during clock configuration (crystal startup error,
  59          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  60          *  the customer, this function will stop in an infinite loop.
  61          *
  62          * Parameters:
  63          *   void
  64          *
  65          * Return:
  66          *   void
  67          *
  68          *******************************************************************************/
  69          CY_CFG_UNUSED
  70          static void CyClockStartupError(uint8 errorCode);
  71          CY_CFG_UNUSED
  72          static void CyClockStartupError(uint8 errorCode)
  73          {
  74   1          /* To remove the compiler warning if errorCode not used.                */
  75   1          errorCode = errorCode;
  76   1      
  77   1          /* `#START CyClockStartupError` */
  78   1      
  79   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  80   1          /* we will end up here to allow the customer to implement something to  */
  81   1          /* deal with the clock condition.                                       */
  82   1      
  83   1          /* `#END` */
  84   1      
  85   1          /* If nothing else, stop here since the clocks have not started         */
  86   1          /* correctly.                                                           */
  87   1          while(1) {}
  88   1      }
  89          #endif
  90          
  91          
  92          /*******************************************************************************
  93          * Function Name: ClockSetup
  94          ********************************************************************************
  95          *
  96          * Summary:
  97          *  Performs the initialization of all of the clocks in the device based on the
  98          *  settings in the Clock tab of the DWR.  This includes enabling the requested
  99          *  clocks and setting the necessary dividers to produce the desired frequency. 
 100          *
 101          * Parameters:
 102          *  void
 103          *
 104          * Return:
 105          *  void
 106          *
 107          *******************************************************************************/
 108          static void ClockSetup(void);
 109          static void ClockSetup(void)
 110          {
 111   1              /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 112   1              static const uint8 CYCODE BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL[] = {
 113   1                      0x05u, 0x00u, 0x10u, 0x01u};
 114   1      
 115   1              uint32 timeout;
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 3   

 116   1              uint8 pllLock;
 117   1      
 118   1      
 119   1              /* Configure Analog Clocks based on settings from Clock DWR */
 120   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYCODE *)(BS_CYDEV_CLKDIST_ACFG0_CF
             -G0_VAL), 4u);
 121   1      
 122   1              /* Configure ILO based on settings from Clock DWR */
 123   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 124   1      
 125   1              /* Configure IMO based on settings from Clock DWR */
 126   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x52u);
 127   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_USB)));
 128   1      
 129   1              /* Configure PLL based on settings from Clock DWR */
 130   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0818u);
 131   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 132   1              /* Wait up to 250us for the PLL to lock */
 133   1              pllLock = 0u;
 134   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 135   1              { 
 136   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 137   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 138   2              }
 139   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 140   1              if (timeout == 0u)
 141   1              {
 142   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 143   2              }
 144   1      
 145   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 146   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 147   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 148   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 149   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 150   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 151   1      
 152   1              /* Configure USB Clock based on settings from Clock DWR */
 153   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_UCFG), 0x00u);
 154   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 155   1      }
 156          
 157          
 158          /* Analog API Functions */
 159          
 160          
 161          /*******************************************************************************
 162          * Function Name: AnalogSetDefault
 163          ********************************************************************************
 164          *
 165          * Summary:
 166          *  Sets up the analog portions of the chip to default values based on chip
 167          *  configuration options from the project.
 168          *
 169          * Parameters:
 170          *  void
 171          *
 172          * Return:
 173          *  void
 174          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 4   

 175          *******************************************************************************/
 176          static void AnalogSetDefault(void);
 177          static void AnalogSetDefault(void)
 178          {
 179   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 180   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 181   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 182   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 183   1      }
 184          
 185          
 186          /*******************************************************************************
 187          * Function Name: SetAnalogRoutingPumps
 188          ********************************************************************************
 189          *
 190          * Summary:
 191          * Enables or disables the analog pumps feeding analog routing switches.
 192          * Intended to be called at startup, based on the Vdda system configuration;
 193          * may be called during operation when the user informs us that the Vdda voltage
 194          * crossed the pump threshold.
 195          *
 196          * Parameters:
 197          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 198          *
 199          * Return:
 200          *  void
 201          *
 202          *******************************************************************************/
 203          void SetAnalogRoutingPumps(uint8 enabled)
 204          {
 205   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 206   1              if (enabled != 0u)
 207   1              {
 208   2                      regValue |= 0x00u;
 209   2              }
 210   1              else
 211   1              {
 212   2                      regValue &= (uint8)~0x00u;
 213   2              }
 214   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 215   1      }
 216          
 217          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 218          
 219          
 220          /*******************************************************************************
 221          * Function Name: cyfitter_cfg
 222          ********************************************************************************
 223          * Summary:
 224          *  This function is called by the start-up code for the selected device. It
 225          *  performs all of the necessary device configuration based on the design
 226          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 227          *  as Clocks and Pins as well as any component configuration that is necessary.
 228          *
 229          * Parameters:  
 230          *   void
 231          *
 232          * Return:
 233          *   void
 234          *
 235          *******************************************************************************/
 236          
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 5   

 237          void cyfitter_cfg(void)
 238          {
 239   1              /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 240   1              static const uint8 CYCODE BS_IOPINS0_8_VAL[] = {
 241   1                      0x40u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0xC0u, 0x00u};
 242   1      
 243   1              /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 244   1              static const uint8 CYCODE BS_IOPINS0_1_VAL[] = {
 245   1                      0x00u, 0x04u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u};
 246   1      
 247   1              /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 248   1              static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 249   1                      0x00u, 0x7Fu, 0x7Fu, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u};
 250   1      
 251   1      
 252   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 253   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 254   1              /* Setup clocks based on selections from Clock DWR */
 255   1              ClockSetup();
 256   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 257   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 258   1      
 259   1              {
 260   2                      static const uint8 CYCODE cfg_byte_table[] = {
 261   2                              0x0Cu,
 262   2                              0x00u, 0x45u, 0x01u, /* Base address 0x004500 */
 263   2                              /* CYDEV_PICU_INTTYPE_PICU15_BASE */
 264   2                              0x7Eu, 0x02u, 
 265   2                              0x00u, 0x52u, 0x01u, /* Base address 0x005200 */
 266   2                              /* CYDEV_PRTDSI_PRT15_BASE */
 267   2                              0x7Cu, 0x40u, 
 268   2                              0x01u, 0x17u, 0x02u, /* Base address 0x011700 */
 269   2                              /* CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080u */
 270   2                              0xEAu, 0x02u, 0xEEu, 0x0Au, 
 271   2                              0x01u, 0x19u, 0x02u, /* Base address 0x011900 */
 272   2                              /* CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080u */
 273   2                              0xEAu, 0x02u, 0xEEu, 0x0Au, 
 274   2                              0x01u, 0x40u, 0x03u, /* Base address 0x014000 */
 275   2                              /* CYDEV_UCFG_DSI0_BASE */
 276   2                              0x33u, 0x81u, 0x36u, 0x40u, 
 277   2                              /* CYDEV_UCFG_DSI0_BASE + 0x00000080u */
 278   2                              0xCCu, 0x70u, 
 279   2                              0x01u, 0x41u, 0x03u, /* Base address 0x014100 */
 280   2                              /* CYDEV_UCFG_DSI1_BASE + 0x00000080u */
 281   2                              0x9Fu, 0x01u, 0xA6u, 0x40u, 0xA7u, 0x80u, 
 282   2                              0x01u, 0x42u, 0x03u, /* Base address 0x014200 */
 283   2                              /* CYDEV_UCFG_DSI2_BASE + 0x00000080u */
 284   2                              0x9Fu, 0x01u, 0xA6u, 0x40u, 0xA7u, 0x80u, 
 285   2                              0x01u, 0x43u, 0x03u, /* Base address 0x014300 */
 286   2                              /* CYDEV_UCFG_DSI3_BASE + 0x00000080u */
 287   2                              0x9Fu, 0x01u, 0xA6u, 0x40u, 0xA7u, 0x80u, 
 288   2                              0x01u, 0x47u, 0x04u, /* Base address 0x014700 */
 289   2                              /* CYDEV_UCFG_DSI7_BASE */
 290   2                              0x08u, 0x08u, 0x0Bu, 0x04u, 0x0Fu, 0x40u, 
 291   2                              /* CYDEV_UCFG_DSI7_BASE + 0x00000080u */
 292   2                              0xC2u, 0x0Eu, 
 293   2                              0x01u, 0x48u, 0x04u, /* Base address 0x014800 */
 294   2                              /* CYDEV_UCFG_DSI8_BASE + 0x00000080u */
 295   2                              0xAEu, 0x40u, 0xAFu, 0x81u, 0xEAu, 0x40u, 0xEEu, 0x50u, 
 296   2                              0x01u, 0x4Cu, 0x02u, /* Base address 0x014C00 */
 297   2                              /* CYDEV_UCFG_DSI12_BASE + 0x00000080u */
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 6   

 298   2                              0xACu, 0x08u, 0xAFu, 0x44u, 
 299   2                              0x01u, 0x51u, 0x01u, /* Base address 0x015100 */
 300   2                              /* CYREG_IDMUX_IRQ_CTL0 */
 301   2                              0x00u, 0x2Au, 
 302   2                      };
 303   2                      /* BYTES: 95 */
 304   2      
 305   2      
 306   2                      CYPACKED typedef struct {
 307   2                              void CYFAR *address;
 308   2                              uint16 size;
 309   2                      } CYPACKED_ATTR cfg_memset_t;
 310   2      
 311   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 312   2                              /* address, size */
 313   2                              {(void CYFAR *)(CYREG_PRT0_DR), 16u},
 314   2                              {(void CYFAR *)(CYREG_PRT3_DR), 64u},
 315   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 316   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 317   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 318   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 319   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 320   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 321   2                      };
 322   2      
 323   2                      uint8 CYDATA i;
 324   2      
 325   2                      /* Zero out critical memory blocks before beginning configuration */
 326   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 327   2                      {
 328   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 329   3                              CYMEMZERO(ms->address, ms->size);
 330   3                      }
 331   2      
 332   2                      cfg_write_bytes_code(cfg_byte_table);
 333   2      
 334   2                      /* Enable digital routing */
 335   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 336   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 337   2      
 338   2                      /* Enable UDB array */
 339   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 340   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 341   2              }
 342   1      
 343   1      
 344   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 345   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DR), (const void CYCODE *)(BS_IOPINS0_8_VAL), 10u);
 346   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT1_DM0), (const void CYCODE *)(BS_IOPINS0_1_VAL), 8u);
 347   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (const void CYCODE *)(BS_IOPINS0_2_VAL), 8u);
 348   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 349   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 350   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 351   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 352   1              {
 353   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 354   2              }
 355   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 7   

 356   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_BCTL0_UDB_TEST_3), 0x40u);
 357   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_BCTL1_UDB_TEST_3), 0x40u);
 358   1      
 359   1              /* Perform basic analog initialization to defaults */
 360   1              AnalogSetDefault();
 361   1      
 362   1              /* Configure alternate active mode */
 363   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 364   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 365   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 72
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 75
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 87
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 109
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 120
0000 7C00        R     MOV     R4,#HIGH BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
0002 7D00        R     MOV     R5,#LOW BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL
0004 7B00              MOV     R3,#00H
0006 7A41              MOV     R2,#041H
0008 7900              MOV     R1,#00H
000A 7F04              MOV     R7,#04H
000C 7E00              MOV     R6,#00H
000E 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 123
0011 904300            MOV     DPTR,#04300H
0014 7406              MOV     A,#06H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
0017 904200            MOV     DPTR,#04200H
001A 7452              MOV     A,#052H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
001D 7B0C              MOV     R3,#0CH
001F 7A01              MOV     R2,#01H
0021 790F              MOV     R1,#0FH
0023 120000      E     LCALL   _cyread8
0026 9046A1            MOV     DPTR,#046A1H
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
002B 7B00              MOV     R3,#00H
002D 7A42              MOV     R2,#042H
002F 7922              MOV     R1,#022H
0031 7D18              MOV     R5,#018H
0033 7C08              MOV     R4,#08H
0035 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 131
0038 7B00              MOV     R3,#00H
003A 7A42              MOV     R2,#042H
003C 7920              MOV     R1,#020H
003E 7D51              MOV     R5,#051H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 9   

0040 7C12              MOV     R4,#012H
0042 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 133
0045 900000      R     MOV     DPTR,#pllLock
0048 E4                CLR     A
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
004A 7F19              MOV     R7,#019H
004C 7E00              MOV     R6,#00H
004E 7D00              MOV     R5,#00H
0050 7C00              MOV     R4,#00H
0052 900000      R     MOV     DPTR,#timeout
0055 120000      E     LCALL   ?C?LSTXDATA
0058         ?C0004:
0058 900000      R     MOV     DPTR,#timeout
005B 120000      E     LCALL   ?C?LLDXDATA
005E D3                SETB    C
005F EF                MOV     A,R7
0060 9400              SUBB    A,#00H
0062 EE                MOV     A,R6
0063 9400              SUBB    A,#00H
0065 404E              JC      ?C0005
0067 900000      R     MOV     DPTR,#pllLock
006A E0                MOVX    A,@DPTR
006B FF                MOV     R7,A
006C EF                MOV     A,R7
006D 6403              XRL     A,#03H
006F 6044              JZ      ?C0005
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0071 904225            MOV     DPTR,#04225H
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
0076 EF                MOV     A,R7
0077 5401              ANL     A,#01H
0079 FF                MOV     R7,A
007A 7E00              MOV     R6,#00H
007C 900000      R     MOV     DPTR,#pllLock
007F E0                MOVX    A,@DPTR
0080 FE                MOV     R6,A
0081 EE                MOV     A,R6
0082 25E0              ADD     A,ACC
0084 FE                MOV     R6,A
0085 EE                MOV     A,R6
0086 4F                ORL     A,R7
0087 FF                MOV     R7,A
0088 EF                MOV     A,R7
0089 5403              ANL     A,#03H
008B FF                MOV     R7,A
008C 900000      R     MOV     DPTR,#pllLock
008F EF                MOV     A,R7
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0091 7FE0              MOV     R7,#0E0H
0093 7E01              MOV     R6,#01H
0095 7D00              MOV     R5,#00H
0097 7C00              MOV     R4,#00H
0099 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 138
009C 900000      R     MOV     DPTR,#timeout
009F 120000      E     LCALL   ?C?LLDXDATA
00A2 7BFF              MOV     R3,#0FFH
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 10  

00A4 7AFF              MOV     R2,#0FFH
00A6 79FF              MOV     R1,#0FFH
00A8 78FF              MOV     R0,#0FFH
00AA 120000      E     LCALL   ?C?LADD
00AD 900000      R     MOV     DPTR,#timeout
00B0 120000      E     LCALL   ?C?LSTXDATA
00B3 80A3              SJMP    ?C0004
00B5         ?C0005:
                                           ; SOURCE LINE # 140
00B5 900000      R     MOV     DPTR,#timeout
00B8 120000      E     LCALL   ?C?LLDXDATA
00BB EF                MOV     A,R7
00BC 4E                ORL     A,R6
00BD 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
00BF 7F03              MOV     R7,#03H
00C1 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 143
00C4         ?C0007:
                                           ; SOURCE LINE # 146
00C4 7B00              MOV     R3,#00H
00C6 7A40              MOV     R2,#040H
00C8 7904              MOV     R1,#04H
00CA 7D00              MOV     R5,#00H
00CC 7C01              MOV     R4,#01H
00CE 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 147
00D1 904004            MOV     DPTR,#04004H
00D4 7407              MOV     A,#07H
00D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
00D7 904006            MOV     DPTR,#04006H
00DA E4                CLR     A
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 149
00DC 904008            MOV     DPTR,#04008H
00DF 7448              MOV     A,#048H
00E1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
00E2 904004            MOV     DPTR,#04004H
00E5 E4                CLR     A
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
00E7 904009            MOV     DPTR,#04009H
00EA E4                CLR     A
00EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
00EC 904001            MOV     DPTR,#04001H
00EF 7402              MOV     A,#02H
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
00F2 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 177
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 11  

0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 203
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 12  

001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 212
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
0035         ?C0011:
                                           ; SOURCE LINE # 214
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 253
0000 904800            MOV     DPTR,#04800H
0003 74C0              MOV     A,#0C0H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 255
0006 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 257
0009 7B00              MOV     R3,#00H
000B 7A46              MOV     R2,#046H
000D 79E8              MOV     R1,#0E8H
000F 120000      E     LCALL   _cyread8
0012 EF                MOV     A,R7
0013 4405              ORL     A,#05H
0015 FD                MOV     R5,A
0016 7B00              MOV     R3,#00H
0018 7A46              MOV     R2,#046H
001A 79E8              MOV     R1,#0E8H
001C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 326
001F 750000      R     MOV     i,#00H
0022         ?C0013:
0022 E500        R     MOV     A,i
0024 C3                CLR     C
0025 9408              SUBB    A,#08H
0027 503A              JNC     ?C0014
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 13  

0029 AF00        R     MOV     R7,i
002B EF                MOV     A,R7
002C 75F005            MOV     B,#05H
002F A4                MUL     AB
0030 2400        R     ADD     A,#LOW cfg_memset_list
0032 F582              MOV     DPL,A
0034 E4                CLR     A
0035 3400        R     ADDC    A,#HIGH cfg_memset_list
0037 F583              MOV     DPH,A
0039 AF82              MOV     R7,DPL
003B AE83              MOV     R6,DPH
003D 8E00        R     MOV     ms,R6
003F 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 329
0041 AE00        R     MOV     R6,ms
0043 AF00        R     MOV     R7,ms+01H
0045 8F82              MOV     DPL,R7
0047 8E83              MOV     DPH,R6
0049 120000      E     LCALL   ?C?PLDCODE
004C AE00        R     MOV     R6,ms
004E AF00        R     MOV     R7,ms+01H
0050 8F82              MOV     DPL,R7
0052 8E83              MOV     DPH,R6
0054 7403              MOV     A,#03H
0056 93                MOVC    A,@A+DPTR
0057 FC                MOV     R4,A
0058 7404              MOV     A,#04H
005A 93                MOVC    A,@A+DPTR
005B FD                MOV     R5,A
005C 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 330
005F 0500        R     INC     i
0061 80BF              SJMP    ?C0013
0063         ?C0014:
                                           ; SOURCE LINE # 332
0063 7E00        R     MOV     R6,#HIGH cfg_byte_table
0065 7F00        R     MOV     R7,#LOW cfg_byte_table
0067 120000      E     LCALL   _cfg_write_bytes_code
                                           ; SOURCE LINE # 335
006A 7B01              MOV     R3,#01H
006C 7A50              MOV     R2,#050H
006E 7903              MOV     R1,#03H
0070 120000      E     LCALL   _cyread8
0073 EF                MOV     A,R7
0074 4402              ORL     A,#02H
0076 FD                MOV     R5,A
0077 7B01              MOV     R3,#01H
0079 7A50              MOV     R2,#050H
007B 7903              MOV     R1,#03H
007D 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 336
0080 7B01              MOV     R3,#01H
0082 7A50              MOV     R2,#050H
0084 7913              MOV     R1,#013H
0086 120000      E     LCALL   _cyread8
0089 EF                MOV     A,R7
008A 4402              ORL     A,#02H
008C FD                MOV     R5,A
008D 7B01              MOV     R3,#01H
008F 7A50              MOV     R2,#050H
0091 7913              MOV     R1,#013H
0093 120000      E     LCALL   _cywrite8
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 14  

                                           ; SOURCE LINE # 339
0096 9043A0            MOV     DPTR,#043A0H
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B EF                MOV     A,R7
009C 4440              ORL     A,#040H
009E FF                MOV     R7,A
009F 9043A0            MOV     DPTR,#043A0H
00A2 EF                MOV     A,R7
00A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
00A4 9043C2            MOV     DPTR,#043C2H
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA 4410              ORL     A,#010H
00AC FF                MOV     R7,A
00AD 9043C2            MOV     DPTR,#043C2H
00B0 EF                MOV     A,R7
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 341
                                           ; SOURCE LINE # 345
00B2 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
00B4 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
00B6 7B00              MOV     R3,#00H
00B8 7A51              MOV     R2,#051H
00BA 79F0              MOV     R1,#0F0H
00BC 7F0A              MOV     R7,#0AH
00BE 7E00              MOV     R6,#00H
00C0 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 346
00C3 7C00        R     MOV     R4,#HIGH BS_IOPINS0_1_VAL
00C5 7D00        R     MOV     R5,#LOW BS_IOPINS0_1_VAL
00C7 7B00              MOV     R3,#00H
00C9 7A51              MOV     R2,#051H
00CB 7912              MOV     R1,#012H
00CD 7F08              MOV     R7,#08H
00CF 7E00              MOV     R6,#00H
00D1 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 347
00D4 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
00D6 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
00D8 7B00              MOV     R3,#00H
00DA 7A51              MOV     R2,#051H
00DC 7922              MOV     R1,#022H
00DE 7F08              MOV     R7,#08H
00E0 7E00              MOV     R6,#00H
00E2 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 348
00E5 9044F4            MOV     DPTR,#044F4H
00E8 7401              MOV     A,#01H
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 350
00EB 904322            MOV     DPTR,#04322H
00EE E0                MOVX    A,@DPTR
00EF FF                MOV     R7,A
00F0 EF                MOV     A,R7
00F1 4408              ORL     A,#08H
00F3 FF                MOV     R7,A
00F4 904322            MOV     DPTR,#04322H
00F7 EF                MOV     A,R7
00F8 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 15  

                                           ; SOURCE LINE # 351
00F9 9046EC            MOV     DPTR,#046ECH
00FC E0                MOVX    A,@DPTR
00FD FF                MOV     R7,A
00FE EF                MOV     A,R7
00FF C3                CLR     C
0100 9405              SUBB    A,#05H
0102 5006              JNC     ?C0016
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
0104 904689            MOV     DPTR,#04689H
0107 743A              MOV     A,#03AH
0109 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 354
010A         ?C0016:
                                           ; SOURCE LINE # 356
010A 7B01              MOV     R3,#01H
010C 7A50              MOV     R2,#050H
010E 7907              MOV     R1,#07H
0110 7D40              MOV     R5,#040H
0112 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 357
0115 7B01              MOV     R3,#01H
0117 7A50              MOV     R2,#050H
0119 7917              MOV     R1,#017H
011B 7D40              MOV     R5,#040H
011D 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 360
0120 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 363
0123 7B00              MOV     R3,#00H
0125 7A43              MOV     R2,#043H
0127 79A0              MOV     R1,#0A0H
0129 C003              PUSH    AR3
012B C002              PUSH    AR2
012D C001              PUSH    AR1
012F 7B00              MOV     R3,#00H
0131 7A43              MOV     R2,#043H
0133 79B0              MOV     R1,#0B0H
0135 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0138 120000      E     LCALL   ?C?PSTXDATA
013B D001              POP     AR1
013D D002              POP     AR2
013F D003              POP     AR3
0141 7F0E              MOV     R7,#0EH
0143 7E00              MOV     R6,#00H
0145 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 364
0148 9043B0            MOV     DPTR,#043B0H
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D EF                MOV     A,R7
014E 54FD              ANL     A,#0FDH
0150 FF                MOV     R7,A
0151 EF                MOV     A,R7
0152 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 365
0153 22                RET     
             ; FUNCTION cyfitter_cfg (END)



C51 COMPILER V9.51   CYFITTER_CFG                                                          04/28/2016 18:59:22 PAGE 16  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    719    ----
   CONSTANT SIZE    =    165    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
