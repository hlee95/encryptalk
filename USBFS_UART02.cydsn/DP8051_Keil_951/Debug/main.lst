C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051_Keil_951\Debug/ma
                    -in.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: main.c
   3          *
   4          * Version: 2.0
   5          *
   6          * Description:
   7          *   The component is enumerated as a Virtual Com port. Receives data from the 
   8          *   hyper terminal, then sends back the received data.
   9          *   For PSoC3/PSoC5LP, the LCD shows the line settings.
  10          *
  11          * Related Document:
  12          *  Universal Serial Bus Specification Revision 2.0
  13          *  Universal Serial Bus Class Definitions for Communications Devices
  14          *  Revision 1.2
  15          *
  16          ********************************************************************************
  17          * Copyright 2015, Cypress Semiconductor Corporation. All rights reserved.
  18          * This software is owned by Cypress Semiconductor Corporation and is protected
  19          * by and subject to worldwide patent and copyright laws and treaties.
  20          * Therefore, you may use this software only as provided in the license agreement
  21          * accompanying the software package from which you obtained this software.
  22          * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  23          * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  24          * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  25          *******************************************************************************/
  26          
  27          #include <project.h>
  28          #include "stdio.h"
  29          
  30          #if defined (__GNUC__)
                  /* Add an explicit reference to the floating point printf library */
                  /* to allow usage of the floating point conversion specifiers. */
                  /* This is not linked in by default with the newlib-nano library. */
                  asm (".global _printf_float");
              #endif
  36          
  37          #define USBFS_DEVICE    (0u)
  38          
  39          /* The buffer size is equal to the maximum packet size of the IN and OUT bulk
  40          * endpoints.
  41          */
  42          #define USBUART_BUFFER_SIZE (64u)
  43          #define LINE_STR_LENGTH     (20u)
  44          
  45          char8* parity[] = {"None", "Odd", "Even", "Mark", "Space"};
  46          char8* stop[]   = {"1", "1.5", "2"};
  47          
  48          
  49          /*******************************************************************************
  50          * Function Name: main
  51          ********************************************************************************
  52          *
  53          * Summary:
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 2   

  54          *  The main function performs the following actions:
  55          *   1. Waits until VBUS becomes valid and starts the USBFS component which is
  56          *      enumerated as virtual Com port.
  57          *   2. Waits until the device is enumerated by the host.
  58          *   3. Waits for data coming from the hyper terminal and sends it back.
  59          *   4. PSoC3/PSoC5LP: the LCD shows the line settings.
  60          *
  61          * Parameters:
  62          *  None.
  63          *
  64          * Return:
  65          *  None.
  66          *
  67          *******************************************************************************/
  68          int main()
  69          {
  70   1          uint16 count;
  71   1          uint8 buffer[USBUART_BUFFER_SIZE];
  72   1          
  73   1      #if (CY_PSOC3 || CY_PSOC5LP)
  74   1          uint8 state;
  75   1          char8 lineStr[LINE_STR_LENGTH];
  76   1          
  77   1          LCD_Start();
  78   1      #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  79   1          
  80   1          CyGlobalIntEnable;
  81   1      
  82   1          /* Start USBFS operation with 5-V operation. */
  83   1          USBUART_Start(USBFS_DEVICE, USBUART_5V_OPERATION);
  84   1          
  85   1          for(;;)
  86   1          {
  87   2              /* Host can send double SET_INTERFACE request. */
  88   2              if (0u != USBUART_IsConfigurationChanged())
  89   2              {
  90   3                  /* Initialize IN endpoints when device is configured. */
  91   3                  if (0u != USBUART_GetConfiguration())
  92   3                  {
  93   4                      /* Enumeration is done, enable OUT endpoint to receive data 
  94   4                       * from host. */
  95   4                      USBUART_CDC_Init();
  96   4                  }
  97   3              }
  98   2      
  99   2              /* Service USB CDC when device is configured. */
 100   2              if (0u != USBUART_GetConfiguration())
 101   2              {
 102   3                  /* Check for input data from host. */
 103   3                  if (0u != USBUART_DataIsReady())
 104   3                  {
 105   4                      /* Read received data and re-enable OUT endpoint. */
 106   4                      count = USBUART_GetAll(buffer);
 107   4      
 108   4                      if (0u != count)
 109   4                      {
 110   5                          /* Wait until component is ready to send data to host. */
 111   5                          while (0u == USBUART_CDCIsReady())
 112   5                          {
 113   6                          }
 114   5      
 115   5                          /* Send data back to host. */
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 3   

 116   5                          USBUART_PutData(buffer, count);
 117   5      
 118   5                          /* If the last sent packet is exactly the maximum packet 
 119   5                          *  size, it is followed by a zero-length packet to assure
 120   5                          *  that the end of the segment is properly identified by 
 121   5                          *  the terminal.
 122   5                          */
 123   5                          if (USBUART_BUFFER_SIZE == count)
 124   5                          {
 125   6                              /* Wait until component is ready to send data to PC. */
 126   6                              while (0u == USBUART_CDCIsReady())
 127   6                              {
 128   7                              }
 129   6      
 130   6                              /* Send zero-length packet to PC. */
 131   6                              USBUART_PutData(NULL, 0u);
 132   6                          }
 133   5                      }
 134   4                  }
 135   3      
 136   3      
 137   3              #if (CY_PSOC3 || CY_PSOC5LP)
 138   3                  /* Check for Line settings change. */
 139   3                  state = USBUART_IsLineChanged();
 140   3                  if (0u != state)
 141   3                  {
 142   4                      /* Output on LCD Line Coding settings. */
 143   4                      if (0u != (state & USBUART_LINE_CODING_CHANGED))
 144   4                      {                  
 145   5                          /* Get string to output. */
 146   5                          sprintf(lineStr,"BR:%4ld %d%c%s", USBUART_GetDTERate(),\
 147   5                                         (uint16) USBUART_GetDataBits(),\
 148   5                                         parity[(uint16) USBUART_GetParityType()][0],\
 149   5                                         stop[(uint16) USBUART_GetCharFormat()]);
 150   5      
 151   5                          /* Clear LCD line. */
 152   5                          LCD_Position(0u, 0u);
 153   5                          LCD_PrintString("                    ");
 154   5      
 155   5                          /* Output string on LCD. */
 156   5                          LCD_Position(0u, 0u);
 157   5                          LCD_PrintString(lineStr);
 158   5                      }
 159   4      
 160   4                      /* Output on LCD Line Control settings. */
 161   4                      if (0u != (state & USBUART_LINE_CONTROL_CHANGED))
 162   4                      {                   
 163   5                          /* Get string to output. */
 164   5                          state = USBUART_GetLineControl();
 165   5                          sprintf(lineStr,"DTR:%s,RTS:%s",  (0u != (state & USBUART_LINE_CONTROL_DTR)) ? "ON" : 
             -"OFF",
 166   5                                                            (0u != (state & USBUART_LINE_CONTROL_RTS)) ? "ON" : 
             -"OFF");
 167   5      
 168   5                          /* Clear LCD line. */
 169   5                          LCD_Position(1u, 0u);
 170   5                          LCD_PrintString("                    ");
 171   5      
 172   5                          /* Output string on LCD. */
 173   5                          LCD_Position(1u, 0u);
 174   5                          LCD_PrintString(lineStr);
 175   5                      }
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 4   

 176   4                  }
 177   3              #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 178   3              }
 179   2          }
 180   1      }
 181          
 182          
 183          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 77
0000 120000      E     LCALL   LCD_Start
                                           ; SOURCE LINE # 80
0003 D2AF              SETB    EA
0005 9044F4            MOV     DPTR,#044F4H
0008 74FD              MOV     A,#0FDH
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
000B 7D01              MOV     R5,#01H
000D 7F00              MOV     R7,#00H
000F 120000      E     LCALL   _USBUART_Start
                                           ; SOURCE LINE # 85
0012         ?C0001:
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 88
0012 120000      E     LCALL   USBUART_IsConfigurationChanged
0015 EF                MOV     A,R7
0016 6009              JZ      ?C0003
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 91
0018 120000      E     LCALL   USBUART_GetConfiguration
001B EF                MOV     A,R7
001C 6003              JZ      ?C0003
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 95
001E 120000      E     LCALL   USBUART_CDC_Init
                                           ; SOURCE LINE # 96
                                           ; SOURCE LINE # 97
0021         ?C0003:
                                           ; SOURCE LINE # 100
0021 120000      E     LCALL   USBUART_GetConfiguration
0024 EF                MOV     A,R7
0025 60EB              JZ      ?C0001
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 103
0027 120000      E     LCALL   USBUART_DataIsReady
002A EF                MOV     A,R7
002B 6055              JZ      ?C0006
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 106
002D 7B01              MOV     R3,#01H
002F 7A00        R     MOV     R2,#HIGH buffer
0031 7900        R     MOV     R1,#LOW buffer
0033 120000      E     LCALL   _USBUART_GetAll
0036 900000      R     MOV     DPTR,#count
0039 EE                MOV     A,R6
003A F0                MOVX    @DPTR,A
003B A3                INC     DPTR
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
003E 900000      R     MOV     DPTR,#count
0041 E0                MOVX    A,@DPTR
0042 FE                MOV     R6,A
0043 A3                INC     DPTR
0044 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 6   

0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 4E                ORL     A,R6
0048 6038              JZ      ?C0006
                                           ; SOURCE LINE # 109
004A         ?C0008:
                                           ; SOURCE LINE # 111
004A 120000      E     LCALL   USBUART_CDCIsReady
004D EF                MOV     A,R7
004E 60FA              JZ      ?C0008
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
0050         ?C0009:
                                           ; SOURCE LINE # 116
0050 7B01              MOV     R3,#01H
0052 7A00        R     MOV     R2,#HIGH buffer
0054 7900        R     MOV     R1,#LOW buffer
0056 900000      R     MOV     DPTR,#count
0059 E0                MOVX    A,@DPTR
005A FC                MOV     R4,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D FD                MOV     R5,A
005E 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 123
0061 900000      R     MOV     DPTR,#count
0064 E0                MOVX    A,@DPTR
0065 FE                MOV     R6,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 EF                MOV     A,R7
006A 6440              XRL     A,#040H
006C 4E                ORL     A,R6
006D 7013              JNZ     ?C0006
                                           ; SOURCE LINE # 124
006F         ?C0011:
                                           ; SOURCE LINE # 126
006F 120000      E     LCALL   USBUART_CDCIsReady
0072 EF                MOV     A,R7
0073 60FA              JZ      ?C0011
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0075         ?C0012:
                                           ; SOURCE LINE # 131
0075 7B00              MOV     R3,#00H
0077 7A00              MOV     R2,#00H
0079 7900              MOV     R1,#00H
007B 7D00              MOV     R5,#00H
007D 7C00              MOV     R4,#00H
007F 120000      E     LCALL   _USBUART_PutData
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
0082         ?C0006:
                                           ; SOURCE LINE # 139
0082 120000      E     LCALL   USBUART_IsLineChanged
0085 900000      R     MOV     DPTR,#state
0088 EF                MOV     A,R7
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
008A 900000      R     MOV     DPTR,#state
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 7   

008D E0                MOVX    A,@DPTR
008E FF                MOV     R7,A
008F EF                MOV     A,R7
0090 6080              JZ      ?C0001
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 143
0092 900000      R     MOV     DPTR,#state
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 5401              ANL     A,#01H
009A FF                MOV     R7,A
009B 7E00              MOV     R6,#00H
009D EF                MOV     A,R7
009E 4E                ORL     A,R6
009F 7003              JNZ     $ + 5H
00A1 020000      R     LJMP    ?C0014
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 146
00A4 120000      E     LCALL   USBUART_GetDTERate
00A7 C004              PUSH    AR4
00A9 C005              PUSH    AR5
00AB C006              PUSH    AR6
00AD C007              PUSH    AR7
00AF 120000      E     LCALL   USBUART_GetDataBits
00B2 7E00              MOV     R6,#00H
00B4 C006              PUSH    AR6
00B6 C007              PUSH    AR7
00B8 120000      E     LCALL   USBUART_GetParityType
00BB EF                MOV     A,R7
00BC 75F003            MOV     B,#03H
00BF A4                MUL     AB
00C0 2400        R     ADD     A,#LOW parity
00C2 F582              MOV     DPL,A
00C4 E4                CLR     A
00C5 3400        R     ADDC    A,#HIGH parity
00C7 F583              MOV     DPH,A
00C9 120000      E     LCALL   ?C?PLDXDATA
00CC 120000      E     LCALL   ?C?CLDPTR
00CF FF                MOV     R7,A
00D0 C007              PUSH    AR7
00D2 120000      E     LCALL   USBUART_GetCharFormat
00D5 EF                MOV     A,R7
00D6 75F003            MOV     B,#03H
00D9 A4                MUL     AB
00DA 2400        R     ADD     A,#LOW stop
00DC F582              MOV     DPL,A
00DE E4                CLR     A
00DF 3400        R     ADDC    A,#HIGH stop
00E1 F583              MOV     DPH,A
00E3 120000      E     LCALL   ?C?PLDXDATA
00E6 900000      E     MOV     DPTR,#?_sprintf?BYTE+0DH
00E9 120000      E     LCALL   ?C?PSTXDATA
00EC D007              POP     AR7
00EE 900000      E     MOV     DPTR,#?_sprintf?BYTE+0CH
00F1 EF                MOV     A,R7
00F2 F0                MOVX    @DPTR,A
00F3 D007              POP     AR7
00F5 D006              POP     AR6
00F7 900000      E     MOV     DPTR,#?_sprintf?BYTE+0AH
00FA EE                MOV     A,R6
00FB F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 8   

00FC A3                INC     DPTR
00FD EF                MOV     A,R7
00FE F0                MOVX    @DPTR,A
00FF D007              POP     AR7
0101 D006              POP     AR6
0103 D005              POP     AR5
0105 D004              POP     AR4
0107 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
010A 120000      E     LCALL   ?C?LSTXDATA
010D 7B01              MOV     R3,#01H
010F 7A00        R     MOV     R2,#HIGH lineStr
0111 7900        R     MOV     R1,#LOW lineStr
0113 C003              PUSH    AR3
0115 C002              PUSH    AR2
0117 C001              PUSH    AR1
0119 7BFF              MOV     R3,#0FFH
011B 7A00        R     MOV     R2,#HIGH ?SC_33
011D 7900        R     MOV     R1,#LOW ?SC_33
011F 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
0122 120000      E     LCALL   ?C?PSTXDATA
0125 D001              POP     AR1
0127 D002              POP     AR2
0129 D003              POP     AR3
012B 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 152
012E 7D00              MOV     R5,#00H
0130 7F00              MOV     R7,#00H
0132 120000      E     LCALL   _LCD_Position
                                           ; SOURCE LINE # 153
0135 7BFF              MOV     R3,#0FFH
0137 7A00        R     MOV     R2,#HIGH ?SC_48
0139 7900        R     MOV     R1,#LOW ?SC_48
013B 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 156
013E 7D00              MOV     R5,#00H
0140 7F00              MOV     R7,#00H
0142 120000      E     LCALL   _LCD_Position
                                           ; SOURCE LINE # 157
0145 7B01              MOV     R3,#01H
0147 7A00        R     MOV     R2,#HIGH lineStr
0149 7900        R     MOV     R1,#LOW lineStr
014B 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 158
014E         ?C0014:
                                           ; SOURCE LINE # 161
014E 900000      R     MOV     DPTR,#state
0151 E0                MOVX    A,@DPTR
0152 FF                MOV     R7,A
0153 EF                MOV     A,R7
0154 5402              ANL     A,#02H
0156 FF                MOV     R7,A
0157 7E00              MOV     R6,#00H
0159 EF                MOV     A,R7
015A 4E                ORL     A,R6
015B 7003              JNZ     $ + 5H
015D 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 164
0160 120000      E     LCALL   USBUART_GetLineControl
0163 900000      R     MOV     DPTR,#state
0166 EF                MOV     A,R7
0167 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 9   

                                           ; SOURCE LINE # 165
0168 7B01              MOV     R3,#01H
016A 7A00        R     MOV     R2,#HIGH lineStr
016C 7900        R     MOV     R1,#LOW lineStr
016E C003              PUSH    AR3
0170 C002              PUSH    AR2
0172 C001              PUSH    AR1
0174 7BFF              MOV     R3,#0FFH
0176 7A00        R     MOV     R2,#HIGH ?SC_69
0178 7900        R     MOV     R1,#LOW ?SC_69
017A 900000      E     MOV     DPTR,#?_sprintf?BYTE+03H
017D 120000      E     LCALL   ?C?PSTXDATA
0180 900000      R     MOV     DPTR,#state
0183 E0                MOVX    A,@DPTR
0184 FF                MOV     R7,A
0185 EF                MOV     A,R7
0186 5401              ANL     A,#01H
0188 FF                MOV     R7,A
0189 7E00              MOV     R6,#00H
018B EF                MOV     A,R7
018C 4E                ORL     A,R6
018D 6008              JZ      ?C0016
018F 7BFF              MOV     R3,#0FFH
0191 7A00        R     MOV     R2,#HIGH ?SC_83
0193 7900        R     MOV     R1,#LOW ?SC_83
0195 8006              SJMP    ?C0017
0197         ?C0016:
0197 7BFF              MOV     R3,#0FFH
0199 7A00        R     MOV     R2,#HIGH ?SC_86
019B 7900        R     MOV     R1,#LOW ?SC_86
019D         ?C0017:
019D 900000      E     MOV     DPTR,#?_sprintf?BYTE+06H
01A0 120000      E     LCALL   ?C?PSTXDATA
01A3 900000      R     MOV     DPTR,#state
01A6 E0                MOVX    A,@DPTR
01A7 FF                MOV     R7,A
01A8 EF                MOV     A,R7
01A9 5402              ANL     A,#02H
01AB FF                MOV     R7,A
01AC 7E00              MOV     R6,#00H
01AE EF                MOV     A,R7
01AF 4E                ORL     A,R6
01B0 6008              JZ      ?C0018
01B2 7BFF              MOV     R3,#0FFH
01B4 7A00        R     MOV     R2,#HIGH ?SC_83
01B6 7900        R     MOV     R1,#LOW ?SC_83
01B8 8006              SJMP    ?C0019
01BA         ?C0018:
01BA 7BFF              MOV     R3,#0FFH
01BC 7A00        R     MOV     R2,#HIGH ?SC_86
01BE 7900        R     MOV     R1,#LOW ?SC_86
01C0         ?C0019:
01C0 900000      E     MOV     DPTR,#?_sprintf?BYTE+09H
01C3 120000      E     LCALL   ?C?PSTXDATA
01C6 D001              POP     AR1
01C8 D002              POP     AR2
01CA D003              POP     AR3
01CC 120000      E     LCALL   _sprintf
                                           ; SOURCE LINE # 169
01CF 7D00              MOV     R5,#00H
01D1 7F01              MOV     R7,#01H
01D3 120000      E     LCALL   _LCD_Position
C51 COMPILER V9.51   MAIN                                                                  04/28/2016 18:59:21 PAGE 10  

                                           ; SOURCE LINE # 170
01D6 7BFF              MOV     R3,#0FFH
01D8 7A00        R     MOV     R2,#HIGH ?SC_48
01DA 7900        R     MOV     R1,#LOW ?SC_48
01DC 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 173
01DF 7D00              MOV     R5,#00H
01E1 7F01              MOV     R7,#01H
01E3 120000      E     LCALL   _LCD_Position
                                           ; SOURCE LINE # 174
01E6 7B01              MOV     R3,#01H
01E8 7A00        R     MOV     R2,#HIGH lineStr
01EA 7900        R     MOV     R1,#LOW lineStr
01EC 120000      E     LCALL   _LCD_PrintString
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
01EF 020000      R     LJMP    ?C0001
01F2 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =     90    ----
   XDATA SIZE       =     24      87
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
