C51 COMPILER V9.51   USBUART_VND                                                           04/28/2016 18:59:29 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_VND
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_vnd.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_vnd.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2)
                    - PR(.\DP8051_Keil_951\Debug/USBUART_vnd.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\USBUART_vnd.obj)

line level    source

   1          /***************************************************************************//**
   2          * \file USBUART_vnd.c
   3          * \version 3.0
   4          *
   5          * \brief
   6          *  This file contains the  USB vendor request handler.
   7          *
   8          ********************************************************************************
   9          * \copyright
  10          * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11          * You may use this file only in accordance with the license, terms, conditions,
  12          * disclaimers, and limitations in the end user license agreement accompanying
  13          * the software package with which this file was provided.
  14          *******************************************************************************/
  15          
  16          #include "USBUART_pvt.h"
  17          #include "cyapicallbacks.h"
  18          
  19          #if(USBUART_EXTERN_VND == USBUART_FALSE)
  20          
  21          /***************************************
  22          * Vendor Specific Declarations
  23          ***************************************/
  24          
  25          /* `#START VENDOR_SPECIFIC_DECLARATIONS` Place your declaration here */
  26          
  27          /* `#END` */
  28          
  29          
  30          /*******************************************************************************
  31          * Function Name: USBUART_HandleVendorRqst
  32          ****************************************************************************//**
  33          *
  34          *  This routine provide users with a method to implement vendor specific
  35          *  requests.
  36          *
  37          *  To implement vendor specific requests, add your code in this function to
  38          *  decode and disposition the request.  If the request is handled, your code
  39          *  must set the variable "requestHandled" to TRUE, indicating that the
  40          *  request has been handled.
  41          *
  42          * \return
  43          *  requestHandled.
  44          *
  45          * \reentrant
  46          *  No.
  47          *
  48          *******************************************************************************/
  49          uint8 USBUART_HandleVendorRqst(void) 
  50          {
  51   1          uint8 requestHandled = USBUART_FALSE;
  52   1      
  53   1          /* Check request direction: D2H or H2D. */
C51 COMPILER V9.51   USBUART_VND                                                           04/28/2016 18:59:29 PAGE 2   

  54   1          if (0u != (USBUART_bmRequestTypeReg & USBUART_RQST_DIR_D2H))
  55   1          {
  56   2              /* Handle direction from device to host. */
  57   2              
  58   2              switch (USBUART_bRequestReg)
  59   2              {
  60   3                  case USBUART_GET_EXTENDED_CONFIG_DESCRIPTOR:
  61   3                  #if defined(USBUART_ENABLE_MSOS_STRING)
  62   3                      USBUART_currentTD.pData = (volatile uint8 *) &USBUART_MSOS_CONFIGURATION_DESCR[0u];
  63   3                      USBUART_currentTD.count = USBUART_MSOS_CONFIGURATION_DESCR[0u];
  64   3                      requestHandled  = USBUART_InitControlRead();
  65   3                  #endif /* (USBUART_ENABLE_MSOS_STRING) */
  66   3                      break;
  67   3                  
  68   3                  default:
  69   3                      break;
  70   3              }
  71   2          }
  72   1      
  73   1          /* `#START VENDOR_SPECIFIC_CODE` Place your vendor specific request here */
  74   1      
  75   1          /* `#END` */
  76   1      
  77   1      #ifdef USBUART_HANDLE_VENDOR_RQST_CALLBACK
                  if (USBUART_FALSE == requestHandled)
                  {
                      requestHandled = USBUART_HandleVendorRqst_Callback();
                  }
              #endif /* (USBUART_HANDLE_VENDOR_RQST_CALLBACK) */
  83   1      
  84   1          return (requestHandled);
  85   1      }
  86          
  87          
  88          /*******************************************************************************
  89          * Additional user functions supporting Vendor Specific Requests
  90          ********************************************************************************/
  91          
  92          /* `#START VENDOR_SPECIFIC_FUNCTIONS` Place any additional functions here */
  93          
  94          /* `#END` */
  95          
  96          
  97          #endif /* USBUART_EXTERN_VND */
  98          
  99          
 100          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_VND                                                           04/28/2016 18:59:29 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBUART_HandleVendorRqst (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
0005 906000            MOV     DPTR,#06000H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 5480              ANL     A,#080H
000D FF                MOV     R7,A
000E 7E00              MOV     R6,#00H
0010 EF                MOV     A,R7
0011 4E                ORL     A,R6
0012 6034              JZ      ?C0001
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 58
0014 906001            MOV     DPTR,#06001H
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 EF                MOV     A,R7
001A 120000      E     LCALL   ?C?CCASE
001D 0000        R     DW      ?C0003
001F 01                DB      01H
0020 0000              DW      00H
0022 0000        R     DW      ?C0001
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
0024         ?C0003:
                                           ; SOURCE LINE # 62
0024 7BFF              MOV     R3,#0FFH
0026 7A00        E     MOV     R2,#HIGH USBUART_MSOS_CONFIGURATION_DESCR
0028 7900        E     MOV     R1,#LOW USBUART_MSOS_CONFIGURATION_DESCR
002A 900000      E     MOV     DPTR,#USBUART_currentTD+02H
002D 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 63
0030 900000      E     MOV     DPTR,#USBUART_MSOS_CONFIGURATION_DESCR
0033 E4                CLR     A
0034 93                MOVC    A,@A+DPTR
0035 FF                MOV     R7,A
0036 7E00              MOV     R6,#00H
0038 900000      E     MOV     DPTR,#USBUART_currentTD
003B EE                MOV     A,R6
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 64
0040 120000      E     LCALL   USBUART_InitControlRead
0043 900000      R     MOV     DPTR,#requestHandled
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
C51 COMPILER V9.51   USBUART_VND                                                           04/28/2016 18:59:29 PAGE 4   

                                           ; SOURCE LINE # 71
0048         ?C0001:
                                           ; SOURCE LINE # 84
0048 900000      R     MOV     DPTR,#requestHandled
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
                                           ; SOURCE LINE # 85
004D         ?C0005:
004D 22                RET     
             ; FUNCTION USBUART_HandleVendorRqst (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
